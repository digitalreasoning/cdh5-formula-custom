{%- set historyserver_host = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.spark.historyserver', 'grains.items', 'compound').values()[0]['fqdn'] -%}
{%- set namenode_host = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.hadoop.hdfs.namenode', 'grains.items', 'compound').values()[0]['fqdn'] -%}
{%- set standby = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.hadoop.hdfs.standby-namenode', 'grains.items', 'compound') -%}
{%- if standby -%}
  {%- set hdfs_url = 'hdfs://' ~ grains.namespace -%}
{%- else -%}
  {%- set hdfs_url = 'hdfs://' ~ namenode_host ~ ':8020' -%}
{%- endif -%}

spark.history.fs.cleaner.enabled=true
spark.history.fs.cleaner.interval=86400
spark.history.fs.cleaner.maxAge=604800
spark.history.fs.update.interval.seconds=10
spark.history.retainedApplications=50
spark.history.ui.admin.acls=
spark.history.ui.port=18088
spark.port.maxRetries=0
spark.ui.filters=org.apache.spark.deploy.yarn.YarnProxyRedirectFilter

spark.history.fs.logDirectory={{ hdfs_url }}/user/spark/applicationHistory

{% if pillar.cdh5.encryption.enable %}
# SSL
spark.ssl.historyServer.enabled=true
spark.ssl.historyServer.keyStore=/etc/spark/conf/spark.keystore
spark.ssl.historyServer.keyStorePassword=spark123
spark.ssl.historyServer.port=18488
spark.ssl.historyServer.protocol=TLSv1.2
{% endif %}

{% if pillar.cdh5.security.enable %}
{% from 'krb5/settings.sls' import krb5 with context %}
# Kerberos
spark.history.kerberos.enabled=true
spark.history.kerberos.principal=spark/{{ grains.fqdn }}@{{ krb5.realm }}
spark.history.kerberos.keytab=/etc/spark/conf/spark.keytab
{% endif %}
