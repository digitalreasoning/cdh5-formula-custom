{%- set zookeepers = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.zookeeper', 'grains.items', 'compound').values() -%}
<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- KMS Backend KeyProvider -->

    <property>
        <name>hadoop.kms.key.provider.uri</name>
        <value>jceks://file@/${user.home}/kms.keystore</value>
    </property>

    <property>
        <name>hadoop.security.keystore.JavaKeyStoreProvider.password</name>
        <value>hadoopkms</value>
    </property>

    <!-- KMS Cache -->

    <property>
        <name>hadoop.kms.cache.enable</name>
        <value>true</value>
    </property>

    <property>
        <name>hadoop.kms.cache.timeout.ms</name>
        <value>600000</value>
    </property>

    <property>
        <name>hadoop.kms.current.key.cache.timeout.ms</name>
        <value>30000</value>
    </property>

    <!-- KMS Audit -->

    <property>
        <name>hadoop.kms.audit.aggregation.window.ms</name>
        <value>10000</value>
    </property>

    <!-- KMS Security -->
    {% if pillar.cdh5.security.enable %}
    {% from 'krb5/settings.sls' import krb5 with context %}
    <property>
        <name>hadoop.kms.authentication.type</name>
        <value>kerberos</value>
    </property>

    <property>
        <name>hadoop.kms.authentication.kerberos.keytab</name>
        <value>/etc/hadoop-kms/conf/kms.keytab</value>
    </property>

    <property>
        <name>hadoop.kms.authentication.kerberos.principal</name>
        <value>HTTP/{{ grains.fqdn }}@{{ krb5.realm }}</value>
    </property>

    <property>
        <name>hadoop.kms.authentication.kerberos.name.rules</name>
        <value>DEFAULT</value>
    </property>
    {% else %}
    <property>
        <name>hadoop.kms.authentication.type</name>
        <value>simple</value>
    </property>
    {% endif %}

    <!-- Authentication cookie signature source -->
    <property>
        <name>hadoop.kms.authentication.signer.secret.provider</name>
        <value>random</value>
    </property>

    <!-- Configuration for 'zookeeper' authentication cookie signature source -->

    <property>
        <name>hadoop.kms.authentication.signer.secret.provider.zookeeper.path</name>
        <value>/hadoop-kms/hadoop-auth-signature-secret</value>
    </property>

    <property>
        <name>hadoop.kms.authentication.signer.secret.provider.zookeeper.connection.string</name>
        <value>{% for zk in zookeepers %}{{ zk['fqdn'] }}{% if not loop.last %},{% endif %}{% endfor %}</value>
    </property>

    {% if pillar.cdh5.security.enable %}
    {% from 'krb5/settings.sls' import krb5 with context %}
    <property>
        <name>hadoop.kms.authentication.signer.secret.provider.zookeeper.auth.type</name>
        <value>kerberos</value>
    </property>

    <property>
        <name>hadoop.kms.authentication.signer.secret.provider.zookeeper.kerberos.keytab</name>
        <value>/etc/hadoop-kms/conf/kms.keytab</value>
    </property>

    <property>
        <name>hadoop.kms.authentication.signer.secret.provider.zookeeper.kerberos.principal</name>
        <value>kms/{{ grains.fqdn }}@{{ krb5.realm }}</value>
    </property>
    {% else %}
    <property>
        <name>hadoop.kms.authentication.signer.secret.provider.zookeeper.auth.type</name>
        <value>none</value>
    </property>
    {% endif %}

    <property>
        <name>hadoop.kms.audit.logger</name>
        <value>org.apache.hadoop.crypto.key.kms.server.SimpleKMSAuditLogger</value>
    </property>

    <!-- access for oozie -->
    <property>
        <name>hadoop.kms.proxyuser.oozie.users</name>
        <value>*</value>
    </property>

    <property>
        <name>hadoop.kms.proxyuser.oozie.groups</name>
        <value>*</value>
    </property>

    <property>
        <name>hadoop.kms.proxyuser.oozie.hosts</name>
        <value>*</value>
    </property>

</configuration>