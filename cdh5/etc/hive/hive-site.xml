{% set hive_host = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.hive', 'grains.items', 'compound').values()[0]['fqdn'] %}
<configuration>
    <property>
        <name>javax.jdo.option.ConnectionURL</name>
        <value>jdbc:mysql://localhost/metastore</value>
        <description>JDBC connect string for a JDBC metastore</description>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionDriverName</name>
        <value>com.mysql.jdbc.Driver</value>
        <description>Driver class name for a JDBC metastore</description>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionUserName</name>
        <value>{{pillar.cdh5.hive.user}}</value>
    </property>

    <property>
        <name>datanucleus.fixedDatastore</name>
        <value>true</value>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionPassword</name>
        <value>{{pillar.cdh5.hive.metastore_password}}</value>
    </property>

    <property>
        <name>hive.metastore.warehouse.dir</name>
        <value>/user/{{pillar.cdh5.hive.user}}/warehouse</value>
    </property>

    <property>
        <name>hive.metastore.uris</name>
        <value>thrift://{{ hive_host }}:9083</value>
    </property>

    <property>
        <name>hive.metastore.client.socket.timeout</name>
        <value>3600</value>
        <description>MetaStore Client socket timeout in seconds (for Impala)</description>
    </property>
    
    <property>
        <name>datanucleus.autoCreateSchema</name>
        <value>false</value>
    </property>

    <property>
        <name>hive.exec.scratchdir</name>
        <value>/user/hive/tmp</value>
    </property>

    {% if salt['pillar.get']('cdh5:hive:auxjars', None) %}
    <property>
        <name>hive.aux.jars.path</name>
        <value>{{pillar.cdh5.hive.auxjars}}</value>
    </property>
    {% endif %}

    {% if pillar.cdh5.security.enable %}
    {% from 'krb5/settings.sls' import krb5 with context %}

    <!-- HiveServer2 security -->
    <property>
        <name>hive.server2.authentication</name>
        <value>KERBEROS</value>
    </property>
    <property>
        <name>hive.server2.authentication.kerberos.principal</name>
        <value>hive/_HOST@{{ krb5.realm }}</value>
    </property>
    <property>
        <name>hive.server2.authentication.kerberos.keytab</name>
        <value>/etc/hive/conf/hive.keytab</value>
    </property>

    <!-- Hive metastore security -->
    <property>
        <name>hive.metastore.sasl.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>hive.metastore.kerberos.keytab.file</name>
        <value>/etc/hive/conf/hive.keytab</value>
    </property>
    <property>
        <name>hive.metastore.kerberos.principal</name>
        <value>hive/_HOST@{{ krb5.realm }}</value>
    </property>
    {% endif %}

    {% if 'cdh5.sentry' in grains.roles %}
    <property>
        <name>hive.server2.enable.impersonation</name>
        <value>false</value>
    </property>
    <property>
        <name>hive.warehouse.subdir.inherit.perms</name>
        <value>true</value>
    </property>
    <property>
        <name>hive.security.authorization.task.factory</name>
       <value>org.apache.sentry.binding.hive.SentryHiveAuthorizationTaskFactoryImpl</value>
    </property>
    <property>
       <name>hive.server2.session.hook</name>
       <value>org.apache.sentry.binding.hive.HiveAuthzBindingSessionHook</value>
    </property>

    <property>
       <name>hive.sentry.conf.url</name>
       <value>file:///etc/sentry/conf/sentry-site.xml</value>
    </property>

    <property>
       <name>hive.security.authorization.task.factory</name>
       <value>org.apache.sentry.binding.hive.SentryHiveAuthorizationTaskFactoryImpl</value>
    </property>

    <property>
        <name>hive.metastore.pre.event.listeners</name>
        <value>org.apache.sentry.binding.metastore.MetastoreAuthzBinding</value>
    </property>
    <property>
        <name>hive.metastore.event.listeners</name>
        <value>org.apache.sentry.binding.metastore.SentryMetastorePostEventListener</value>
    </property>
    <property>
        <name>hive.metastore.pre.event.listeners</name>
        <value>org.apache.sentry.binding.metastore.MetastoreAuthzBinding</value>
    </property>
    {% endif %}

</configuration>
