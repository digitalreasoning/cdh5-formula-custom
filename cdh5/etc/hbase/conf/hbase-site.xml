<?xml version="1.0"?>
{%- set standby = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.hadoop.hdfs.standby-namenode', 'grains.items', 'compound') -%}
{%- set nn_host = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.hadoop.hdfs.namenode', 'grains.items', 'compound').values()[0]['fqdn'] -%}
<configuration>
    <property>
        <name>hbase.zookeeper.quorum</name>
        <value>{% for host, items in salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:cdh5.zookeeper', 'grains.items', 'compound').items() %}{{ items['fqdn'] }}{% if not loop.last %},{% endif %}{% endfor %}</value>
    </property>
    <property>
        <name>hbase.rootdir</name>
        {% if standby %}
        <value>hdfs://{{ grains.namespace }}/hbase</value>
        {% else %}
        <value>hdfs://{{ nn_host }}:8020/hbase</value>
        {% endif %}
    </property>
    <property>
        <name>hbase.cluster.distributed</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.regionserver.handler.count</name>
        <value>200</value>
    </property>
    <property>
        <name>hbase.tmp.dir</name>
        <value>{{ pillar.cdh5.hbase.tmp_dir }}</value>
    </property>
    <!-- zookeeper properties -->
    <property>
        <name>zookeeper.session.timeout</name>
        <value>60000</value>
    </property>
    <property>
        <name>hbase.zookeeper.property.dataDir</name>
        <value>{{ pillar.cdh5.zookeeper.data_dir }}</value>
    </property>
    <property>
        <name>hbase.zookeeper.property.maxClientCnxns</name>
        <value>300</value>
    </property>
    <property>
        <name>hbase.client.keyvalue.maxsize</name>
        <value>11534336</value>
    </property>
    <property>
      <!-- tell the master to perform fresh assignments on startup, this avoids problems with ephemeral IP addresses in EC2 -->
        <name>hbase.master.startup.retainassign</name>
        <value>false</value>
    </property>
    <property>
        <!-- increase the number of threads used for bulk assignment to speed up table creation and cluster restarts -->
        <name>hbase.bulk.assignment.threadpool.size</name>
        <value>60</value>
    </property>
    <property>
        <name>hbase.bulkload.staging.dir</name>
        <value>/hbase/staging</value>
    </property>
    <property>
        <name>hfile.format.version</name>
        <value>3</value>
    </property>

    {% if pillar.cdh5.security.enable %}
    {% from 'krb5/settings.sls' import krb5 with context %}
    <property>
        <name>hbase.security.authentication</name>
        <value>kerberos</value>
    </property>
    <property>
        <name>hbase.security.authorization</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.security.exec.permission.checks</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.rpc.engine</name>
        <value>org.apache.hadoop.hbase.ipc.SecureRpcEngine</value>
    </property>
    <property>
        <name>hbase.rpc.protection</name>
        <value>privacy</value>
    </property>
    <property>
        <name>hbase.rest.authentication.type</name>
        <value>kerberos</value>
    </property>
    <property>
        <name>hbase.thrift.security.qop</name>
        <value>auth</value>
    </property>

    <!-- keytabs -->
    <property>
        <name>hbase.master.kerberos.principal</name>
        <value>hbase/_HOST@{{ krb5.realm }}</value>
    </property>
    <property>
        <name>hbase.master.keytab.file</name>
        <value>/etc/hbase/conf/hbase.keytab</value>
    </property>
    <property> 
        <name>hbase.regionserver.kerberos.principal</name> 
        <value>hbase/_HOST@{{ krb5.realm }}</value> 
    </property> 
    <property> 
        <name>hbase.regionserver.keytab.file</name> 
        <value>/etc/hbase/conf/hbase.keytab</value> 
    </property>
    <property>
        <name>hbase.thrift.kerberos.principal</name>
        <value>hbase/_HOST@{{ krb5.realm }}</value>
    </property>
    <property>
        <name>hbase.thrift.keytab.file</name>
        <value>/etc/hbase/conf/hbase.keytab</value>
    </property>
    <property>
        <name>hbase.rest.authentication.kerberos.principal</name>
        <value>HTTP/_HOST@{{ krb5.realm }}</value>
    </property>
    <property>
        <name>hbase.rest.authentication.kerberos.keytab</name>
        <value>/etc/hbase/conf/hbase.keytab</value>
    </property>

    <!-- Other props -->
    <property>
        <name>hbase.coprocessor.master.classes</name>
        <value>org.apache.hadoop.hbase.security.access.AccessController</value>
    </property>
    <property>
        <name>hbase.coprocessor.region.classes</name>
        <value>org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController,org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint</value>
    </property>
    {% endif %}

    {% if pillar.cdh5.encryption.enable %}
    <property>
        <name>hbase.ssl.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.thrift.ssl.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.thrift.ssl.keystore.store</name>
        <value>/etc/hbase/conf/hbase.keystore</value>
    </property>
    <property>
        <name>hbase.thrift.ssl.keystore.password</name>
        <value>hbase123</value>
    </property>
    <property>
        <name>hbase.thrift.ssl.keystore.keypassword</name>
        <value>hbase123</value>
    </property>
    {% endif %}
</configuration>
